[{"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/index.js":"1","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/reportWebVitals.js":"2","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/App/index.js":"3","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/contentPage/index.js":"4","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/Login/index.js":"5","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/contentpageuser/index.js":"6","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/index.js":"7","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/DummyData/DummyData.js":"8","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/Footer/index.js":"9","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/Thumbnail/index.js":"10","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/Heading/index.js":"11","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/LinkColumn/index.js":"12"},{"size":803,"mtime":1644226359309,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1642688436500,"results":"15","hashOfConfig":"14"},{"size":2857,"mtime":1644226359306,"results":"16","hashOfConfig":"14"},{"size":14489,"mtime":1644231351318,"results":"17","hashOfConfig":"14"},{"size":3769,"mtime":1644226359308,"results":"18","hashOfConfig":"14"},{"size":13802,"mtime":1644226359308,"results":"19","hashOfConfig":"14"},{"size":726,"mtime":1644226359307,"results":"20","hashOfConfig":"14"},{"size":904,"mtime":1642765849483,"results":"21","hashOfConfig":"14"},{"size":448,"mtime":1642765849483,"results":"22","hashOfConfig":"14"},{"size":992,"mtime":1642765849483,"results":"23","hashOfConfig":"14"},{"size":699,"mtime":1644226359307,"results":"24","hashOfConfig":"14"},{"size":1660,"mtime":1644231240029,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ix3oej",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/reportWebVitals.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/App/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/contentPage/index.js",["53"],"//import {useState} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport \"./style.css\"\nimport { useEffect,useState } from 'react'\nimport { useLocation ,Link} from 'react-router-dom'\nimport { LinkColumn } from '../LinkColumn'\n\nconst APIURL = process.env.REACT_APP_API_URL;\n\nfunction Content() {\n    const location = useLocation();\n    const {title} = location.state\n    const {week}=location.state\n    console.log(title)\n    console.log(week)\n    //data from homepage\n    const header =title.title\n    console.log(header)\n    //to pass for fetching data\n    const weekID=week.week\n    console.log(weekID)\n    //header \n    const banner=header;\n    //getting info from resource form\n    const [weekres,setWeekRes]=useState(\"\");\n    const [datares,setDataRes]=useState(\"\");\n    const [mapres,setMapRes] = useState([]);\n\n    async function resSubmit(e){\n        e.preventDefault()\n\n        try{\n             await fetch(`${APIURL}/resources`,{\n                method: \"POST\",\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    week: weekres,\n                    Type_of_resource: datares,\n                }),\n            }).then((res)=>{\n                res.json();\n                console.log(res);\n                //window.location.reload(false);\n                if(res.status === 200){\n                    console.log(res.status)\n                    setDataRes(\"\");\n                    setWeekRes(\"\");\n                   \n            }}) \n         \n        } catch (err) {\n            console.log(err);\n        }\n            // let resJson =await res.json();\n            // console.log(resJson)      \n    }\n\n     async function deleteIndividualRes(id){\n\n          await fetch(`${APIURL}/resources/${id}`,{\n            method:'DELETE'\n            })\n            .then((response)=>{response.json();\n                window.location.reload(false)})\n            // .then((data)=> window.location.href=data.redirect)\n     return ;\n    }  \n    // ///////////////////////////End of Resource post////////\n    // ////////////////////////////start of video data////////////////\n    const [weekvideo,setWeekVideo]=useState(\"\");\n    const [datavideo,setDataVideo]=useState(\"\");\n    const [mapvideo,setMapVideo] = useState([]);\n\n     async function vidSubmit(e){\n        e.preventDefault()\n\n        try{\n            await fetch(`${APIURL}/videos`,{\n                method: \"POST\",\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    week: weekvideo,\n                    Type_of_resource: datavideo,\n                }),\n            }).then((res)=>{\n                res.json();\n                console.log(res);\n                window.location.reload(false);\n                if(res.status === 200){\n                    console.log(res.status)\n                    setDataRes(\"\");\n                    setWeekRes(\"\");\n                   \n            }}) \n         \n        } catch (err) {\n            console.log(err);\n        }\n            // let resJson =await res.json();\n            // console.log(resJson)      \n    }\n\n     async function deleteIndividualVideo(id){\n\n          await fetch(`${APIURL}/videos/${id}`,{\n            method:'DELETE'\n            })\n            .then((response)=>{response.json();\n                window.location.reload(false)})\n            // .then((data)=> window.location.href=data.redirect)\n     return ;\n    } \n     // ////////////////////////////end of video data////////////////\n      // ////////////////////////////start of link data////////////////\n    const [weeklink,setWeekLink]=useState(\"\");\n    const [datalink,setDataLink]=useState(\"\");\n    const [maplink,setMapLink] = useState([]);\n\n     async function linkSubmit(e){\n        e.preventDefault()\n\n        try{\n            await fetch(`${APIURL}/links`,{\n                method: \"POST\",\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    week: weeklink,\n                    Type_of_resource: datalink,\n                }),\n            }).then((res)=>{\n                res.json();\n                console.log(res);\n                window.location.reload(false);\n                if(res.status === 200){\n                    console.log(res.status)\n                    setDataRes(\"\");\n                    setWeekRes(\"\");\n                   \n            }}) \n         \n        } catch (err) {\n            console.log(err);\n        }\n            // let resJson =await res.json();\n            // console.log(resJson)      \n    }\n\n    async function deleteIndividuallink(id){\n\n         await fetch(`${APIURL}/links/${id}`,{\n            method:'DELETE'\n            })\n            .then((response)=>{response.json();\n                window.location.reload(false)})\n            // .then((data)=> window.location.href=data.redirect)\n     return ;\n    } \n      // ////////////////////////////end of link data////////////////\n    // ////////////////////////////start of get data////////////////\n    // async function fetchData (){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/resources/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapRes(data.payload.responseResources)\n    //     }\n\n    // async function fetchVideoData(){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/videos/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapVideo(data.payload.responseVideo)\n    //     }\n\n    // async function fetchLinkData(){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/links/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapLink(data.payload.responseLinks)\n    //     }\n\n    // useEffect(()=>{\n    //      async function fetchData (){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/resources/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapRes(data.payload.responseResources)\n    //     }\n    //    fetchData();\n   \n      \n    // },[weekID]) //moved to link\n\n     useEffect(()=>{\n         async function fetchVideoData(){\n        const id=weekID;\n            const response = await fetch(`${APIURL}/videos/${id}`);\n            const data = await response.json();\n            // console.log(data.payload.responseResources)\n            setMapVideo(data.payload.responseVideo)\n        }\n\n     fetchVideoData();\n    },[weekID]);\n\n      useEffect(()=>{\n           async function fetchLinkData(){\n        const id=weekID;\n            const response = await fetch(`${APIURL}/links/${id}`);\n            const data = await response.json();\n            // console.log(data.payload.responseResources)\n            setMapLink(data.payload.responseLinks)\n        }\n\n    fetchLinkData();\n      }, [weekID]);\n    \n    console.log(mapres)\n    console.log(mapvideo)\n    console.log(maplink)\n\n\n  return (<>\n          {/* /////////////////////////////////////////////////////// */}\n    <div className=\"header-content-page\">\n        <div className=\"back-to-home\">\n             <Link to=\"/homepage\" className=\"linktext\"><FontAwesomeIcon icon={faHome} /></Link>\n        </div>\n        <div className=\"header-title\">\n            <p>{banner}</p>\n        </div>\n        <div className=\"header-logout\">\n           <a className=\"logout\"href=\"/\">\n               Log out \n           </a>\n\n        </div>\n    </div>\n       {/* /////////////////////////////////////////////////////// */}\n   <div className=\"container\"> \n       {/* /////////////////////////////////////////////////////// */}\n       {/* resources */}\n       <div className=\"resources-container\">\n           \n            {/* header subs */}\n                <div className=\"header-subs\">\n                    <p className=\"header-subs-text\">Resources Link</p>\n                </div>\n                \n            {/* end of header subs */}\n            <LinkColumn weekID={weekID} deleteIndividualRes={deleteIndividualRes}/>\n            {/* <div className=\"resource-container-1\"> */}\n            {/* container */}\n            {/* {mapres.map((input)=>{\n                return<>    \n                    <div key={input.id} className=\"main-subs-container\">\n                    <div className=\"individual-container\">\n                        <div className=\"links-resources-container\">\n                            <a className=\"resource-para\" href={input.type_of_resource}>{input.type_of_resource} </a>\n                        </div>\n                        <button className=\"icon-cross-container\"  onClick={()=>{deleteIndividualRes(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                    </div>\n                    </div>\n                </>\n                })} */}\n            {/* end of container */}\n            {/* </div> */}\n            {/* form */}\n            <div className=\"resource-container-2\">\n            <div className=\"formcontainer\">\n                <form className=\"formResources\" onSubmit={resSubmit}>\n                    <input type=\"number\" value={weekres} placeholder=\"Enter the week Number\" required onChange={(e)=> setWeekRes(e.target.value)}/>\n                    <input type=\"text\" value={datares} placeholder=\"Enter Link to Resource\" required onChange={(e)=> setDataRes(e.target.value)}/>\n                    <input type=\"submit\" className=\"submitBtn\"/>\n                </form>\n            </div>\n           {/* end of form */}\n            </div>\n       </div>\n       {/* End of resources */}\n\n       {/* /////////////////////////////////////////////////////// */}\n       \n        {/* video container */}\n        <div className=\"container-video-1\">\n        <div className=\"videos-main-container\">\n    \n                   {/* try out 2 */}\n            <div className=\"video-individual-container\">\n                {/* map through start */}\n                {mapvideo.map((input)=>{\n                    return <>\n                    <div key={input.id} className=\"container-video\">\n                        <div className=\"video-display\">\n                            <iframe width=\"220\" height=\"145\" src={input.type_of_resource} title={input.id}>\n                            </iframe>\n                        </div>\n                         <button className=\"icon-cross-container-video\" onClick={()=>{deleteIndividualVideo(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                        </div>\n                    </>\n                })}\n\n                {/* map through end*/}\n            </div>\n           </div>\n                     {/* form */}\n            <div className=\"formcontainer\">\n                <form className=\"formlink\" onSubmit={vidSubmit}>\n                    <input type=\"number\" name=\"\" id=\"\" placeholder=\"Enter the week Number\" required onChange={(e)=> setWeekVideo(e.target.value) } value={weekvideo}/>\n                    <input type=\"text\" placeholder=\"Enter Link to Resource\"required onChange={(e)=> setDataVideo(e.target.value)} value={datavideo}/>\n                    <input type=\"submit\" className=\"submitBtn\"/>\n                </form>\n            </div>\n           {/* end of form */} \n        </div>\n       {/* /////////////////////////////////////////////////////// */}\n       {/* links container */}\n       <div className=\"links-container\">\n           {/* header subs */}\n           <div className=\"header-subs\">\n               <p className=\"header-subs-text\">Project Link</p>\n           </div>\n\n           {/* end of header subs */}\n           <div className=\"links-container-1\">\n\n            {/* /////////////////map start ///////////////// */}\n                {maplink.map((input)=>{\n                    return <> \n                    {/* container */}\n                    <div key={input.id} className=\"main-subs-container\">\n                        <div className=\"individual-container\">\n                            <div className=\"links-links-container\">\n                                <a className=\"links-para\" href={input.type_of_resource}>{input.type_of_resource}</a>\n                             </div>\n                        <button className=\"icon-cross-container\" onClick={()=>{deleteIndividuallink(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                         </button>\n                        </div>\n                    </div>\n                    </>\n                 })} \n            {/* /////////////////end map start ///////////////// */}\n           </div>\n           \n           <div className=\"links-container-2\">\n           {/* form */}\n            <div className=\"formcontainer\">\n                <form className=\"formlink\" onSubmit={linkSubmit}>\n                    <input type=\"number\" name=\"\" id=\"\" placeholder=\"Enter the week Number\"required onChange={(e)=> setWeekLink(e.target.value)} value={weeklink}/>\n                    <input type=\"text\" placeholder=\"Enter Link to Resource\"required onChange={(e)=> setDataLink(e.target.value)} value={datalink}/>\n                    <input type=\"submit\" className=\"submitBtn\"/>\n                </form>\n            </div>\n           {/* end of form */}\n           </div>\n       </div>\n       {/* End of list container */}\n    </div>\n\n    <div className=\"footer-content-page\">\n        \n        <div className=\"footer-title\">\n            <p>Powered By</p>\n        </div>\n        <div className=\"logo\">\n            <img src=\"https://d33wubrfki0l68.cloudfront.net/e6fddcbea146f91d2f3c160f7d56a9391a4740b0/4e758/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png\" alt=\"Logo\" />\n        </div>\n    </div>\n  </>);\n}\n\nexport default Content;","/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/Login/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/contentpageuser/index.js",["54"],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/DummyData/DummyData.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/Footer/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/Thumbnail/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/Heading/index.js",[],"/Users/amandarichards/national-project-week-keeping_up_with_the_coders/src/Components/LinkColumn/index.js",["55","56","57","58"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport \"../contentPage/style.css\"\nimport { useEffect,useState } from 'react'\nimport { useLocation ,Link} from 'react-router-dom'\n\nimport React from 'react';\n\nexport const LinkColumn = ({weekID, deleteIndividualRes}) => {\n    const [mapres,setMapRes] = useState([]);\n    const APIURL = process.env.REACT_APP_API_URL;\n     \n    useEffect(()=>{\n         async function fetchData (){\n       const id=weekID;\n            const response = await fetch(`${APIURL}/resources/${id}`);\n            const data = await response.json();\n            // console.log(data.payload.responseResources)\n            setMapRes(data.payload.responseResources)\n        }\n       fetchData();\n   \n      \n    },[])\n  return (<div className=\"resource-container-1\">\n       {mapres.map((input)=>{\n                return<>    \n                    <div key={input.id} className=\"main-subs-container\">\n                    <div className=\"individual-container\">\n                        <div className=\"links-resources-container\">\n                            <a className=\"resource-para\" href={input.type_of_resource}>{input.type_of_resource} </a>\n                        </div>\n                        <button className=\"icon-cross-container\"  onClick={()=>{deleteIndividualRes(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                    </div>\n                    </div>\n                </>\n                })}\n  </div>)};\n\n",["59","60"],{"ruleId":"61","severity":1,"message":"62","line":29,"column":19,"nodeType":"63","messageId":"64","endLine":29,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":197,"column":7,"nodeType":"67","endLine":197,"endColumn":13,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"61","severity":1,"message":"70","line":6,"column":10,"nodeType":"63","messageId":"64","endLine":6,"endColumn":21},{"ruleId":"61","severity":1,"message":"71","line":6,"column":23,"nodeType":"63","messageId":"64","endLine":6,"endColumn":27},{"ruleId":"65","severity":1,"message":"72","line":25,"column":7,"nodeType":"67","endLine":25,"endColumn":9,"suggestions":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},"no-unused-vars","'setMapRes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchData', 'fetchLinkData', and 'fetchVideoData'. Either include them or remove the dependency array.","ArrayExpression",["78"],"'faHome' is defined but never used.","'useLocation' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'APIURL' and 'weekID'. Either include them or remove the dependency array.",["79"],"no-native-reassign",["80"],"no-negated-in-lhs",["81"],{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data, fetchData, fetchLinkData, fetchVideoData]",{"range":"86","text":"87"},"Update the dependencies array to be: [APIURL, weekID]",{"range":"88","text":"89"},[6826,6832],"[data, fetchData, fetchLinkData, fetchVideoData]",[873,875],"[APIURL, weekID]"]