[{"/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/Login/index.js":"1","/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/index.js":"2","/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/contentpageuser/index.js":"3","/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/contentPage/index.js":"4"},{"size":3769,"mtime":1644255316510,"results":"5","hashOfConfig":"6"},{"size":726,"mtime":1644255316508,"results":"7","hashOfConfig":"6"},{"size":14908,"mtime":1644255336943,"results":"8","hashOfConfig":"6"},{"size":15451,"mtime":1644256690925,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8ltdg4",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":2,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/Login/index.js",[],"/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/HomePage/index.js",[],"/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/contentpageuser/index.js",["19"],"/Users/tasniim/github-classroom/SchoolOfCode/national-project-week-keeping_up_with_the_coders/src/Components/contentPage/index.js",["20","21","22","23","24","25","26"],"//import {useState} from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport \"./style.css\"\nimport { useEffect,useState } from 'react'\nimport { useLocation ,Link} from 'react-router-dom'\n\nconst APIURL = process.env.REACT_APP_API_URL;\n\nfunction Content() {\n    const location = useLocation();\n    const {title} = location.state\n    const {week}=location.state\n    console.log(title)\n    console.log(week)\n    //data from homepage\n    const header =title.title\n    console.log(header)\n    //to pass for fetching data\n    const weekID=week.week\n    console.log(weekID)\n    //header \n    const banner=header;\n    //getting info from resource form\n    const [weekres,setWeekRes]=useState(\"\");\n    const [datares,setDataRes]=useState(\"\");\n    const [mapres,setMapRes] = useState([]);\n    const [dummyRes,setDummyRes] =useState(0);\n\n    async function resSubmit(e){\n        e.preventDefault()\n\n        try{\n             await fetch(`${APIURL}/resources`,{\n                method: \"POST\",\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    week: weekres,\n                    Type_of_resource: datares,\n                }),\n            }).then((res)=>{\n                res.json();\n                console.log(res);\n                // window.location.reload(false);\n                if(res.status === 200){\n                    console.log(res.status)\n                    setDataRes(\"\");\n                    setWeekRes(\"\");\n                   \n            }}) \n         \n        } catch (err) {\n            console.log(err);\n        }\n            // let resJson =await res.json();\n            // console.log(resJson)  \n            dummyRes    \n    }\n\n     async function deleteIndividualRes(id){\n\n          await fetch(`${APIURL}/resources/${id}`,{\n            method:'DELETE'\n            })\n            .then((response)=>{response.json();\n            })\n            // .then((data)=> window.location.href=data.redirect)\n     return ;\n    }  \n    // ///////////////////////////End of Resource post////////\n    // ////////////////////////////start of video data////////////////\n    const [weekvideo,setWeekVideo]=useState(\"\");\n    const [datavideo,setDataVideo]=useState(\"\");\n    const [mapvideo,setMapVideo] = useState([]);\n\n     async function vidSubmit(e){\n        e.preventDefault()\n\n        try{\n            await fetch(`${APIURL}/videos`,{\n                method: \"POST\",\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    week: weekvideo,\n                    Type_of_resource: datavideo,\n                }),\n            }).then((res)=>{\n                res.json();\n                console.log(res);\n                \n                if(res.status === 200){\n                    console.log(res.status)\n                    setDataRes(\"\");\n                    setWeekRes(\"\");\n                   \n            }}) \n         \n        } catch (err) {\n            console.log(err);\n        }\n            // let resJson =await res.json();\n            // console.log(resJson)      \n    }\n\n     async function deleteIndividualVideo(id){\n\n          await fetch(`${APIURL}/videos/${id}`,{\n            method:'DELETE'\n            })\n            .then((response)=>{response.json();\n               })\n            // .then((data)=> window.location.href=data.redirect)\n     return ;\n    } \n     // ////////////////////////////end of video data////////////////\n      // ////////////////////////////start of link data////////////////\n    const [weeklink,setWeekLink]=useState(\"\");\n    const [datalink,setDataLink]=useState(\"\");\n    const [maplink,setMapLink] = useState([]);\n\n     async function linkSubmit(e){\n        e.preventDefault()\n\n        try{\n            await fetch(`${APIURL}/links`,{\n                method: \"POST\",\n                headers:{\n                    \"Content-type\":\"application/json\",\n                    \"Accept\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    week: weeklink,\n                    Type_of_resource: datalink,\n                }),\n            }).then((res)=>{\n                res.json();\n                console.log(res);\n                window.location.reload(false);\n                if(res.status === 200){\n                    console.log(res.status)\n                    setDataRes(\"\");\n                    setWeekRes(\"\");\n                   \n            }}) \n         \n        } catch (err) {\n            console.log(err);\n        }\n            // let resJson =await res.json();\n            // console.log(resJson)      \n    }\n\n    async function deleteIndividuallink(id){\n\n         await fetch(`${APIURL}/links/${id}`,{\n            method:'DELETE'\n            })\n            .then((response)=>{response.json();\n                window.location.reload(false)})\n            // .then((data)=> window.location.href=data.redirect)\n     return ;\n    } \n      // ////////////////////////////end of link data////////////////\n    // ////////////////////////////start of get data////////////////\n    // async function fetchData (){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/resources/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapRes(data.payload.responseResources)\n    //     }\n\n    // async function fetchVideoData(){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/videos/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapVideo(data.payload.responseVideo)\n    //     }\n\n    // async function fetchLinkData(){\n    //     const id=weekID;\n    //         const response = await fetch(`${APIURL}/links/${id}`);\n    //         const data = await response.json();\n    //         // console.log(data.payload.responseResources)\n    //         setMapLink(data.payload.responseLinks)\n    //     }\n    // useEffect(()=>{\n    //      async function resSubmit(e){\n    //     e.preventDefault()\n\n    //     try{\n    //          await fetch(`${APIURL}/resources`,{\n    //             method: \"POST\",\n    //             headers:{\n    //                 \"Content-type\":\"application/json\",\n    //                 \"Accept\":\"application/json\"\n    //             },\n    //             body:JSON.stringify({\n    //                 week: weekres,\n    //                 Type_of_resource: datares,\n    //             }),\n    //         }).then((res)=>{\n    //             res.json();\n    //             console.log(res);\n    //             // window.location.reload(false);\n    //             if(res.status === 200){\n    //                 console.log(res.status)\n    //                 setDataRes(\"\");\n    //                 setWeekRes(\"\");\n                   \n    //         }}) \n         \n    //     } catch (err) {\n    //         console.log(err);\n    //     }\n    //         // let resJson =await res.json();\n    //         // console.log(resJson)\n                 \n    // } \n    // resSubmit()\n    // },[])\n    useEffect(()=>{\n       \n         async function fetchData (){\n        const id=weekID;\n            const response = await fetch(`${APIURL}/resources/${id}`);\n            const data = await response.json();\n            // console.log(data.payload.responseResources)\n            setMapRes(data.payload.responseResources)\n        }\n       fetchData();\n        setDummyRes()\n      \n    },[weekID,dummyRes])\n\n     useEffect(()=>{\n         async function fetchVideoData(){\n        const id=weekID;\n            const response = await fetch(`${APIURL}/videos/${id}`);\n            const data = await response.json();\n            // console.log(data.payload.responseResources)\n            setMapVideo(data.payload.responseVideo)\n        }\n\n     fetchVideoData();\n    },[weekID,vidSubmit,deleteIndividualVideo]);\n\n      useEffect(()=>{\n           async function fetchLinkData(){\n        const id=weekID;\n            const response = await fetch(`${APIURL}/links/${id}`);\n            const data = await response.json();\n            // console.log(data.payload.responseResources)\n            setMapLink(data.payload.responseLinks)\n        }\n\n    fetchLinkData();\n      }, [weekID,linkSubmit,deleteIndividuallink]);\n    \n    console.log(mapres)\n    console.log(mapvideo)\n    console.log(maplink)\n\n\n  return (<>\n          {/* /////////////////////////////////////////////////////// */}\n    <div className=\"header-content-page\">\n        <div className=\"back-to-home\">\n             <Link to=\"/homepage\" className=\"linktext\"><FontAwesomeIcon icon={faHome} /></Link>\n        </div>\n        <div className=\"header-title\">\n            <p>{banner}</p>\n        </div>\n        <div className=\"header-logout\">\n           <a className=\"logout\"href=\"/\">\n               Log out \n           </a>\n\n        </div>\n    </div>\n       {/* /////////////////////////////////////////////////////// */}\n   <div className=\"container\"> \n       {/* /////////////////////////////////////////////////////// */}\n       {/* resources */}\n       <div className=\"resources-container\">\n           \n            {/* header subs */}\n                <div className=\"header-subs\">\n                    <p className=\"header-subs-text\">Resources Link</p>\n                </div>\n            {/* end of header subs */}\n            <div className=\"resource-container-1\">\n            {/* container */}\n            {mapres.map((input)=>{\n                return<>    \n                    <div key={input.id} className=\"main-subs-container\">\n                    <div className=\"individual-container\">\n                        <div className=\"links-resources-container\">\n                            <a className=\"resource-para\" href={input.type_of_resource}>{input.type_of_resource} </a>\n                        </div>\n                        <button className=\"icon-cross-container\"  onClick={()=>{deleteIndividualRes(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                    </div>\n                    </div>\n                </>\n                })}\n            {/* end of container */}\n            </div>\n            {/* form */}\n            <div className=\"resource-container-2\">\n            <div className=\"formcontainer\">\n                <form className=\"formResources\" onSubmit={resSubmit}>\n                    <input type=\"number\" value={weekres} placeholder=\"Enter the week Number\" required onChange={(e)=> setWeekRes(e.target.value)}/>\n                    <input type=\"text\" value={datares} placeholder=\"Enter Link to Resource\" required onChange={(e)=> setDataRes(e.target.value)}/>\n                    <input type=\"submit\" className=\"submitBtn\"/>\n                </form>\n            </div>\n           {/* end of form */}\n            </div>\n       </div>\n       {/* End of resources */}\n\n       {/* /////////////////////////////////////////////////////// */}\n       \n        {/* video container */}\n        <div className=\"container-video-1\">\n        <div className=\"videos-main-container\">\n    \n                   {/* try out 2 */}\n            <div className=\"video-individual-container\">\n                {/* map through start */}\n                {mapvideo.map((input)=>{\n                    return <>\n                    <div key={input.id} className=\"container-video\">\n                        <div className=\"video-display\">\n                            <iframe width=\"220\" height=\"145\" src={input.type_of_resource} title={input.id}>\n                            </iframe>\n                        </div>\n                         <button className=\"icon-cross-container-video\" onClick={()=>{deleteIndividualVideo(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                        </button>\n                        </div>\n                    </>\n                })}\n\n                {/* map through end*/}\n            </div>\n           </div>\n                     {/* form */}\n            <div className=\"formcontainer\">\n                <form className=\"formlink\" onSubmit={vidSubmit}>\n                    <input type=\"number\" name=\"\" id=\"\" placeholder=\"Enter the week Number\" required onChange={(e)=> setWeekVideo(e.target.value) } value={weekvideo}/>\n                    <input type=\"text\" placeholder=\"Enter Link to Resource\"required onChange={(e)=> setDataVideo(e.target.value)} value={datavideo}/>\n                    <input type=\"submit\" className=\"submitBtn\"/>\n                </form>\n            </div>\n           {/* end of form */} \n        </div>\n       {/* /////////////////////////////////////////////////////// */}\n       {/* links container */}\n       <div className=\"links-container\">\n           {/* header subs */}\n           <div className=\"header-subs\">\n               <p className=\"header-subs-text\">Project Link</p>\n           </div>\n\n           {/* end of header subs */}\n           <div className=\"links-container-1\">\n\n            {/* /////////////////map start ///////////////// */}\n                {maplink.map((input)=>{\n                    return <> \n                    {/* container */}\n                    <div key={input.id} className=\"main-subs-container\">\n                        <div className=\"individual-container\">\n                            <div className=\"links-links-container\">\n                                <a className=\"links-para\" href={input.type_of_resource}>{input.type_of_resource}</a>\n                             </div>\n                        <button className=\"icon-cross-container\" onClick={()=>{deleteIndividuallink(input.id)}}>\n                                <FontAwesomeIcon icon={faTimesCircle} />\n                         </button>\n                        </div>\n                    </div>\n                    </>\n                 })} \n            {/* /////////////////end map start ///////////////// */}\n           </div>\n           \n           <div className=\"links-container-2\">\n           {/* form */}\n            <div className=\"formcontainer\">\n                <form className=\"formlink\" onSubmit={linkSubmit}>\n                    <input type=\"number\" name=\"\" id=\"\" placeholder=\"Enter the week Number\"required onChange={(e)=> setWeekLink(e.target.value)} value={weeklink}/>\n                    <input type=\"text\" placeholder=\"Enter Link to Resource\"required onChange={(e)=> setDataLink(e.target.value)} value={datalink}/>\n                    <input type=\"submit\" className=\"submitBtn\"/>\n                </form>\n            </div>\n           {/* end of form */}\n           </div>\n       </div>\n       {/* End of list container */}\n    </div>\n\n    <div className=\"footer-content-page\">\n        \n        <div className=\"footer-title\">\n            <p>Powered By</p>\n        </div>\n        <div className=\"logo\">\n            <img src=\"https://d33wubrfki0l68.cloudfront.net/e6fddcbea146f91d2f3c160f7d56a9391a4740b0/4e758/static/logo-51c754388b198e5bbb0d08a971ebbfa2.png\" alt=\"Logo\" />\n        </div>\n    </div>\n  </>);\n}\n\nexport default Content;",{"ruleId":"27","severity":1,"message":"28","line":191,"column":8,"nodeType":"29","messageId":"30","endLine":191,"endColumn":12},{"ruleId":"31","severity":2,"message":"32","line":61,"column":13,"nodeType":"33","messageId":"34","endLine":61,"endColumn":21},{"ruleId":"35","severity":1,"message":"36","line":80,"column":6,"nodeType":"37","endLine":110,"endColumn":6},{"ruleId":"35","severity":1,"message":"38","line":112,"column":6,"nodeType":"37","endLine":121,"endColumn":6},{"ruleId":"35","severity":1,"message":"39","line":128,"column":6,"nodeType":"37","endLine":158,"endColumn":6},{"ruleId":"35","severity":1,"message":"40","line":160,"column":5,"nodeType":"37","endLine":169,"endColumn":6},{"ruleId":"35","severity":1,"message":"41","line":242,"column":7,"nodeType":"42","endLine":242,"endColumn":21,"suggestions":"43"},{"ruleId":"44","severity":2,"message":"45","line":242,"column":15,"nodeType":"29","messageId":"46","endLine":242,"endColumn":20},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","react-hooks/exhaustive-deps","The 'vidSubmit' function makes the dependencies of useEffect Hook (at line 254) change on every render. To fix this, wrap the definition of 'vidSubmit' in its own useCallback() Hook.","FunctionDeclaration","The 'deleteIndividualVideo' function makes the dependencies of useEffect Hook (at line 254) change on every render. To fix this, wrap the definition of 'deleteIndividualVideo' in its own useCallback() Hook.","The 'linkSubmit' function makes the dependencies of useEffect Hook (at line 266) change on every render. To fix this, wrap the definition of 'linkSubmit' in its own useCallback() Hook.","The 'deleteIndividuallink' function makes the dependencies of useEffect Hook (at line 266) change on every render. To fix this, wrap the definition of 'deleteIndividuallink' in its own useCallback() Hook.","React Hook useEffect has an unnecessary dependency: 'dummy'. Either exclude it or remove the dependency array. Outer scope values like 'dummy' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["47"],"no-undef","'dummy' is not defined.","undef",{"desc":"48","fix":"49"},"Update the dependencies array to be: [weekID]",{"range":"50","text":"51"},[7861,7875],"[weekID]"]